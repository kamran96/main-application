services:
  users:
    build:
      context: .
      dockerfile: apps/users-service/Dockerfile
    ports:
      - '3334:3334'
    environment:
      USER_MONGO_URI: mongodb://mongo:27017/users
      JWT_SECRET: 12341dASDasdA!@23
      SSL: true
      EXPIRES: "12"
      SSL_KEY_PATH: /localhost.key
      SSL_CERT_PATH: /localhost.crt
    logging:
      driver: json-file

  contacts:
    build:
      context: .
      dockerfile: apps/contacts-service/Dockerfile
    ports:
      - '3333:3333'
    environment:
      CONTACT_MONGO_URI: mongodb://mongo:27017/contacts
      JWT_SECRET: 12341dASDasdA!@23
      SSL: true
      EXPIRES: "12"
      SSL_KEY_PATH: /localhost.key
      SSL_CERT_PATH: /localhost.crt

  items:
    build:
      context: .
      dockerfile: apps/items-service/Dockerfile
    ports:
      - '3335:3335'
    environment:
      ITEM_MONGO_URI: mongodb://mongo:27017/items
      SSL: true
      SSL_KEY_PATH: /localhost.key
      SSL_CERT_PATH: /localhost.crt

  accounts:
    build:
      context: .
      dockerfile: apps/accounting-service/Dockerfile
    ports:
      - '3336:3336'
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      DB_DATABASE: accounts
      SSL: true
      SSL_KEY_PATH: /localhost.key
      SSL_CERT_PATH: /localhost.crt
    depends_on:
      - postgres


  invoices:
    build:
      context: .
      dockerfile: apps/invoices-service/Dockerfile
    ports:
      - '3337:3337'
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      DB_DATABASE: invoices
      SSL: true
      SSL_KEY_PATH: /localhost.key
      SSL_CERT_PATH: /localhost.crt
    depends_on:
      - postgres

  payments:
    build:
      context: .
      dockerfile: apps/payments-service/Dockerfile
    ports:
      - '3341:3341'
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      DB_DATABASE: payments
      SSL: true
      SSL_KEY_PATH: /localhost.key
      SSL_CERT_PATH: /localhost.crt
    depends_on:
      - postgres

  attachments:
    build:
      context: .
      dockerfile: apps/attachments-service/Dockerfile
    ports:
      - '3338:3338'
    environment:
      ATTACHMENT_MONGO_URI: mongodb://mongo:27017/attachments
      SSL: true
      SSL_KEY_PATH: /localhost.key
      SSL_CERT_PATH: /localhost.crt

  main-ui:
    build:
      context: .
      dockerfile: apps/main-ui/Dockerfile
    ports:
      - '4200:4200'
 

  emails:
    build:
      context: .
      dockerfile: apps/email-service/Dockerfile
    environment:
      RABBIT_USERNAME: admin
      RABBIT_PASSWORD: admin
      RABBIT_HOST: rabbits
      RABBIT_PORT: 5672
    depends_on:
      - rabbits
   
  reports:
    build:
      context: .
      dockerfile: apps/reports-service/Dockerfile
    ports:
      - '3340:3340'
    environment:
      SSL: true
      SSL_KEY_PATH: /localhost.key
      SSL_CERT_PATH: /localhost.crt
      RABBIT_USERNAME: admin
      RABBIT_PASSWORD: admin
      RABBIT_HOST: rabbits
      RABBIT_PORT: 5672
    depends_on:
      - rabbits 

  mongo:
    image: mongo:latest
    expose:
      - 27017
    ports:
      - "27017:27017"
    logging:
      driver: none
    volumes:
      - dbdata:/data/db

  postgres:
    image: postgres:latest
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/invyce/
      
  rabbits:
    image: "rabbitmq:latest"
    hostname: rabbits
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
      RABBITMQ_DEFAULT_VHOST: "/"
    volumes:
      - dbdata:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"

volumes:
  dbdata:

networks:
  default:
    name: invyce

